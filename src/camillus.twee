:: StoryTitle
Camillus


:: StoryData
{
	"ifid": "74F33364-4C2C-4376-AF7D-AB4A12489121",
	"format": "SugarCube",
	"format-version": "2.36.1",
	"start": "Main Menu",
	"zoom": 1
}


:: Story Stylesheet [stylesheet]
@import url(https://cdn.jsdelivr.net/gh/dreampulse/computer-modern-web-font@master/fonts.css);

html {
  height: 100%;
  box-sizing: border-box;
}

body {  
  background-color: black;
  color: darkgrey;
  font-family: "Computer Modern Concrete", Helvetica, sans-serif;
  font-size: 16px;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  margin: 0px;
  padding: 0px;
  min-height: 100%;
  line-height: 1.5;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
}

h1 {
  text-align: center;
  color: gold;
  font-weight: bold;
}

#init-screen {
  color: gold;
	background-color: black;
}

html[data-init="loading"] #init-loading {
	border-top-color: gold;
	border-bottom-color: gold;
}

#macro-message-9776btn {
  text-align: right;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

#macro-message-9776btn button {
  width: 2em;
  /* background-color: gold; */
  color: black;

}

#ui-dialog-title {
  background-color: gold;
  color: black;
  text-align: left;
}

#ui-dialog-close {
  display: none;
}

#setting-body-volume input {
  border: none;
}
#setting-label-volume {
  font-size: 15px;
}

ul.buttons {
  font-size: 15px;
  display: block;
}

.saves ul.buttons {
  display: none;
}



a {
  text-decoration: none;
  color: gold;
}

a:hover {
  text-decoration: none;
  color: grey;
}

img {
  max-width: 100%;
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
}

select, textarea, input[type=text] {
  min-width: auto;
  width: 95%;
  border: 1px solid gold;
  -webkit-transition: all 1s ease-in-out;
  -moz-transition: all 1s ease-in-out;
  -o-transition: all 1s ease-in-out;
  -ms-transition: all 1s ease-in-out;
  transition: all 1s ease-in-out;
}

input {
  border: 1px solid gold;
  -webkit-transition: all 1s ease-in-out;
  -moz-transition: all 1s ease-in-out;
  -o-transition: all 1s ease-in-out;
  -ms-transition: all 1s ease-in-out;
  transition: all 1s ease-in-out;
}

button {
  background-color: gold;
  color: black;
  border: none;
  width: 100%;
  font-size: 20px;
  -webkit-transition: all 1s ease-in-out;
  -moz-transition: all 1s ease-in-out;
  -o-transition: all 1s ease-in-out;
  -ms-transition: all 1s ease-in-out;
  transition: all 1s ease-in-out;
}

button:disabled {
  border: none;
}

#textbox button {
  margin: 1px;
}

.miniUI {
  background-color: black;
  font-size: 18px;
  margin: 0px;
  padding-right: 20px;
  position: absolute;
  top: 20px;
  right: 0px;
  -webkit-transition: all 1s ease-in-out;
  -moz-transition: all 1s ease-in-out;
  -o-transition: all 1s ease-in-out;
  -ms-transition: all 1s ease-in-out;
  transition: all 1s ease-in-out;
}

.multichoice {
  display: flex;
}

.transparent button {
  background-color: rgba(0,0,0,0);
}

#story {
  /* border: 1px solid gold; */
  /* min-height: 100%; */
  background-color: black;
}

.passage {
  display: flex;
  line-height: 1.5;
  align-items: stretch;
  -webkit-transition: all 0.5s ease-in-out;
  -moz-transition: all 0.5s ease-in-out;
  -o-transition: all 0.5s ease-in-out;
  -ms-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
  transition-delay: 0s; 

}

#passage-i {
  transition: 0s;
  transition-delay: 1.75s; 
}

.c {
  color: gold;
}

.imgbox {
  max-width: 200px;
  min-width: 200px;
  display: flex;
  margin: 30px 20px 30px 70px;
}

#textbox {
  width: 300px;
  height: 465px;
  overflow: hidden;
  margin: 20px 0px 20px 50px;
  padding: 0px 2em;
  min-width: 200px;
  display: flex;
  flex-direction: column-reverse;
  flex: auto;
  -webkit-transition: all 1s ease-in-out;
  -moz-transition: all 1s ease-in-out;
  -o-transition: all 1s ease-in-out;
  -ms-transition: all 1s ease-in-out;
  transition: all 1s ease-in-out;
}

.startbox {
  width: 300px;
  height: 465px;
  margin: 20px 0px 20px 50px;
  padding: 0px 2em;
  min-width: 200px;
  background-color: black;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: stretch;
  border: 1px solid gold;
}

.startbox .menu-items {
  display: flex;
  flex-direction: column;
}

.startbox button {
  color: gold;
  background-color: black;
  border: 1px solid gold;
  width: 100%;
  length: 100%;
}

.startbox button:hover {
  background-color: black;
  color: grey;
}

*::-webkit-scrollbar {
  width: 5px;
}
*::-webkit-scrollbar-track {
  background: black;
}
*::-webkit-scrollbar-thumb {
  background: black;
}
*::-webkit-scrollbar-thumb:hover {
  background: gold;
}

.buttons {
  display:flex;
  align-items:flex-start;
  flex-direction: column-reverse;
  margin-right:-20px;
  margin-bottom:50px;
  gap: 5px;
  padding: 0px;
  font-size:24px;
}

.macro-ctp-visible {
  width: 100%;
}

.back {
    display: none;
}

[data-tags~=menu] .back {
  display: block;
}

[data-tags~=red] select, [data-tags~=red] textarea, [data-tags~=red] input[type=text], [data-tags~=red] input, [data-tags~=red] #textbox, [data-tags~=red] .startbox {
  border: 1px solid orangered;
}

[data-tags~=red] button:not([disabled]), [data-tags~=red] #ui-dialog-title {
  background-color: orangered;
}

[data-tags~=red] h1, [data-tags~=red] .c, [data-tags~=red] a {
  color: orangered;
}

[data-tags~=yellow] select, [data-tags~=yellow] textarea, [data-tags~=yellow] input[type=text], [data-tags~=yellow] input, [data-tags~=yellow] #textbox, [data-tags~=yellow] .startbox {
  border: 1px solid gold;
}

[data-tags~=yellow] button:not([disabled]), [data-tags~=yellow] #ui-dialog-title {
  background-color: gold;
}

[data-tags~=yellow] .startbox button {
  background-color: black;
}

[data-tags~=yellow] h1, [data-tags~=yellow] .c, [data-tags~=yellow] a {
  color: gold;
}

[data-tags~=pink] select, [data-tags~=pink] textarea, [data-tags~=pink] input[type=text], [data-tags~=pink] input, [data-tags~=pink] #textbox, [data-tags~=pink] .startbox {
  border: 1px solid pink;
}

[data-tags~=pink] button:not([disabled]), [data-tags~=pink] #ui-dialog-title {
  background-color: pink;
}

[data-tags~=pink] h1, [data-tags~=pink] .c, [data-tags~=pink] a {
  color: pink;
}





/* start volume slider */
input[type=range] {
  margin: 6.1px 0;
  background-color: transparent;
  -webkit-appearance: none;
}
input[type=range]:focus {
  outline: none;
}
input[type=range]::-webkit-slider-runnable-track {
  background: #eee;
  border: 0;
  border-radius: 25px;
  width: 100%;
  height: 3.8px;
  cursor: pointer;
}
input[type=range]::-webkit-slider-thumb {
  margin-top: -6.1px;
  width: 16px;
  height: 16px;
  background: #eee;
  border: 1px solid rgba(0, 0, 0, 0);
  border-radius: 50px;
  cursor: pointer;
  -webkit-appearance: none;
}
input[type=range]::-webkit-slider-runnable-track {
  background: #eee;
}
input[type=range]::-moz-range-track {
  background: #eee;
  border: 0;
  border-radius: 25px;
  width: 100%;
  height: 3.8px;
  cursor: pointer;
}
input[type=range]::-moz-range-thumb {
  width: 16px;
  height: 16px;
  background: #eee;
  border: 1px solid rgba(0, 0, 0, 0);
  border-radius: 50px;
  cursor: pointer;
}
input[type=range]::-ms-track {
  background: transparent;
  border-color: transparent;
  border-width: 6.1px 0;
  color: transparent;
  width: 100%;
  height: 3.8px;
  cursor: pointer;
}
input[type=range]::-ms-fill-lower {
  background: #eee;
  border: 0;
  border-radius: 50px;
}
input[type=range]::-ms-fill-upper {
  background: #eee;
  border: 0;
  border-radius: 50px;
}
input[type=range]::-ms-thumb {
  width: 16px;
  height: 16px;
  background: #eee;
  border: 1px solid rgba(0, 0, 0, 0);
  border-radius: 50px;
  cursor: pointer;
  margin-top: 0px;
  /*Needed to keep the Edge thumb centred*/
}
input[type=range]:focus::-ms-fill-lower {
  background: #eee;
}
input[type=range]:focus::-ms-fill-upper {
  background: #eee;
}
/*TODO: Use one of the selectors from https://stackoverflow.com/a/20541859/7077589 and figure out
how to remove the virtical space around the range input in IE*/
@supports (-ms-ime-align:auto) {
  /* Pre-Chromium Edge only styles, selector taken from hhttps://stackoverflow.com/a/32202953/7077589 */
  input[type=range]#volume-control {
    margin: 0;
    /*Edge starts the margin from the thumb, not the track as other browsers do*/
  }
}
/* end volume slider */

@media screen and (max-width: 850px) {
  body {
    font-size: 12px;
    flex-direction: column;
  }

  #textbox button {
    font-size: 12px;
  }

  #passages {
    max-width: 100%;
    /* height: 100vh; */
    width: 100vw;
    margin: 0px;
    padding: 0px;
  }
  .passage {
    /* height: 100vh; */
    width: 100vw;
    margin: 0px 0px 0px 0px;
    padding: 0px;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  .imgbox {
    margin: 0px 20px 0px 20px;
    display: flex;
    width: 20vh;
    min-width: auto;
  }

  #textbox {
    overflow: hidden;
    margin: 0px 0px 0px 0px;
    max-height: 30vh;
    width: 100px;
    padding: 0px 20px;
  }
  #story {
    height: 40vh;
    margin: 0px;
    padding: 0px;
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
  }

  .buttons {
    position: relative;
    display:flex;
    flex-direction: row-reverse;
    margin:20px 0px 0px 0px;
    width: 100%;
    gap: 10px;
    max-width: 250px;
  }

  select, textarea, input[type=text] {
  width: 90%;
}

  .continue {
    flex: 1;
  }

  .back {
    flex: 1;
  }

  .startbox{
    width: inherit;
    margin: 20px;
    margin: 0px 0px 0px 0px;
    height: 200px;
    overflow: hidden;
    width: 100px;
    padding: 0px 20px;
  }

  .startbox .menu-items {
    flex-direction: row;
}
  .startbox button {
    font-size: 15px;
  }
}
/* Text transitions */
.macro-append-insert, .macro-linkappend-insert, .macro-linkprepend-insert, .macro-linkreplace-insert, .macro-prepend-insert, .macro-repeat-insert, .macro-replace-insert, .macro-timed-insert {

}

/* Text effects */
@keyframes shakeit {
  0% { transform: translate(2px, 1px) rotate(0deg); }
	10% { transform: translate(-1px, -2px) rotate(-1deg); }
	20% { transform: translate(-3px, 0px) rotate(1deg); }
	30% { transform: translate(0px, 2px) rotate(0deg); }
	40% { transform: translate(1px, -1px) rotate(1deg); }
	50% { transform: translate(-1px, 2px) rotate(-1deg); }
	60% { transform: translate(-3px, 1px) rotate(0deg); }
	70% { transform: translate(2px, 1px) rotate(-1deg); }
	80% { transform: translate(-1px, -1px) rotate(1deg); }
	90% { transform: translate(2px, 2px) rotate(0deg); }
	100% { transform: translate(1px, -2px) rotate(-1deg); }
}

@-o-keyframes shakeit {
	0% { -o-transform: translate(2px, 1px) rotate(0deg); }
	10% { -o-transform: translate(-1px, -2px) rotate(-1deg); }
	20% { -o-transform: translate(-3px, 0px) rotate(1deg); }
	30% { -o-transform: translate(0px, 2px) rotate(0deg); }
	40% { -o-transform: translate(1px, -1px) rotate(1deg); }
	50% { -o-transform: translate(-1px, 2px) rotate(-1deg); }
	60% { -o-transform: translate(-3px, 1px) rotate(0deg); }
	70% { -o-transform: translate(2px, 1px) rotate(-1deg); }
	80% { -o-transform: translate(-1px, -1px) rotate(1deg); }
	90% { -o-transform: translate(2px, 2px) rotate(0deg); }
	100% { -o-transform: translate(1px, -2px) rotate(-1deg); }
}

@-webkit-keyframes shakeit {
	0% { -webkit-transform: translate(2px, 1px) rotate(0deg); }
	10% { -webkit-transform: translate(-1px, -2px) rotate(-1deg); }
	20% { -webkit-transform: translate(-3px, 0px) rotate(1deg); }
	30% { -webkit-transform: translate(0px, 2px) rotate(0deg); }
	40% { -webkit-transform: translate(1px, -1px) rotate(1deg); }
	50% { -webkit-transform: translate(-1px, 2px) rotate(-1deg); }
	60% { -webkit-transform: translate(-3px, 1px) rotate(0deg); }
	70% { -webkit-transform: translate(2px, 1px) rotate(-1deg); }
	80% { -webkit-transform: translate(-1px, -1px) rotate(1deg); }
	90% { -webkit-transform: translate(2px, 2px) rotate(0deg); }
	100% { -webkit-transform: translate(1px, -2px) rotate(-1deg); }
}

@-moz-keyframes shakeit {
	0% { -moz-transform: translate(2px, 1px) rotate(0deg); }
	10% { -moz-transform: translate(-1px, -2px) rotate(-1deg); }
	20% { -moz-transform: translate(-3px, 0px) rotate(1deg); }
	30% { -moz-transform: translate(0px, 2px) rotate(0deg); }
	40% { -moz-transform: translate(1px, -1px) rotate(1deg); }
	50% { -moz-transform: translate(-1px, 2px) rotate(-1deg); }
	60% { -moz-transform: translate(-3px, 1px) rotate(0deg); }
	70% { -moz-transform: translate(2px, 1px) rotate(-1deg); }
	80% { -moz-transform: translate(-1px, -1px) rotate(1deg); }
	90% { -moz-transform: translate(2px, 2px) rotate(0deg); }
	100% { -moz-transform: translate(1px, -2px) rotate(-1deg); }
}

.shake {
	-webkit-animation-name: shakeit;
	-webkit-animation-duration: 0.8s;
	-webkit-transform-origin:50% 50%;
	-webkit-animation-iteration-count: infinite;
	-webkit-animation-timing-function: linear;
  -moz-animation-name: shakeit;
	-moz-animation-duration: 0.8s;
	-moz-transform-origin:50% 50%;
	-moz-animation-iteration-count: infinite;
	-moz-animation-timing-function: linear;
  -o-animation-name: shakeit;
	-o-animation-duration: 0.8s;
	-o-transform-origin:50% 50%;
	-o-animation-iteration-count: infinite;
	-o-animation-timing-function: linear;
  animation-name: shakeit;
	animation-duration: 0.8s;
	transform-origin:50% 50%;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
}
.shake{
	display:inline-block
}

/* ---- particles.js container ---- */ #particles-js{ position:absolute; width: 100%; height: 100%; background-color: rgba(0,0,0,0); background-image: url(""); background-repeat: no-repeat; background-size: 10%; background-position: 50% 50%; }

:: Story JavaScript [script]
(function () {
    // disable.js, by chapel, for sugarcube 2
    // v1.0.0

    'use strict';

    var cls = 'disabled';
    var interactive = ['button', 'fieldset', 'input', 'menuitem', 'optgroup', 'option', 'select', 'textarea'];

    function getEl (self) {
        // get the first interactive element
        var $el = $(self).find(interactive.join(',')).first();
        if (!$el[0]) {
            $el = $(self).children().eq(0);
            if (!$el[0]) {
                return $(self);
            }
        }
        return $el;
    }

    function changeCls ($el) {
        if ($el.ariaIsDisabled()) {
            $el.addClass(cls);
        } else {
            $el.removeClass(cls);
        }
    }

    function disable ($el, bool) {
        if (!($el instanceof $)) {
            $el = $($el);
        }
        $el.ariaDisabled((bool === undefined) ? true : !!bool);
        changeCls($el);
        return $el;
    }

    // no need for JS API as there us a built-in jQuery extension

    Macro.add('disable', {
        tags : null,
        handler : function () {
            var bool, $wrapper = $(document.createElement('span'))
                .addClass('macro-' + this.name)
                .wiki(this.payload[0].contents);

            try {
                bool = this.args.raw.trim() ? !!Scripting.evalJavaScript(this.args.full) : undefined;
            } catch (err) {
                return this.error("bad evaluation: " + err.message);
            }

            disable(getEl($wrapper), bool);

            // output
            $(this.output).append($wrapper);
        }
    });

}());

// volume slider, by chapel; for sugarcube 2
// version 1.1.0

/*
    Changelog:
    v1.1.1:
      - Removed compatiblity to make it clear what should be updated
      - fixed not saving to API
    v1.1.0:
      - Fixed compatiblity issues with SugarCube version 2.28 (still compatible with older versions, too).
      - Added settings API integration for SugarCube 2.26.
      - Internal improvements and greater style consistency with my other work.
      - Added a pre-minified version.
      - By default, the slider is now more granual than before (101 possible positions vs 11).
        Change the `current` and `rangemax` options to 10 to restore the old feel.
*/

(function () {
    Setting.addRange('volume', {
        label : 'Volume: ',
        min : 0,
        max : 100,
        step : 1,
        default : 50,
        onInit : updateVolume,
        onChange : updateVolume
    });

	// Function to update the volume level.
	function setVolume (val) {
		if (typeof val !== 'number') val = Number(val);
		if (Number.isNaN(val) || val < 0) val = 0.5;
		if (val > 1) val = 1;
		settings.volume = val * 100;
		Setting.save();

		if ($("input[name='volume']").val() != settings.volume) {
			$("input[name='volume']").val(settings.volume);
		}
		try {
			if (SimpleAudio) {
				if (typeof SimpleAudio.volume === 'function') {
					SimpleAudio.volume(val);
				} else {
					SimpleAudio.volume = val;
				}
				return val;
			} else {
				throw new Error('Cannot access audio API.');
			}
		} catch (err) {
			// Fall back to the wikifier if we have to.
			console.error(err.message, err);
			$.wiki('<<masteraudio volume ' + val + '>>');
			return val;
		}
	}

	// Grab volume level changes from the volume slider.
	$(document).on('input', "input[name='volume']", function() {
		var change = parseInt($("input[name='volume']").val());
		setVolume(change / 100);
	});

	// Create the <<volume>> macro.
	Macro.add('volume', {
		handler : function () {
			var wrapper = $(document.createElement('span'));
			var slider = $(document.createElement('input'));
			var className = 'macro-' + this.name;
			slider.attr({
				id		: 'volume-control',
				type	: 'range',
				name	: 'volume',
				min		: 0,
				max		: 100,
				step	: 1,
				value	: settings.volume
			});
			// Class '.macro-volume' and ID '#volume-control' for styling the slider
			wrapper.append(slider).addClass(className).appendTo(this.output);
		}
	});

	function updateVolume () {
		setVolume(settings.volume / 100);
	}

	
}());

// message macro, by chapel (with help from T.M. Edwards); for sugarcube 2
// version 1.0.1
// see the documentation: https://github.com/ChapelR/custom-macros-for-sugarcube-2#message-macro
$(document.head).append('<link rel="icon" href="https://64.media.tumblr.com/3c0c138ba2fbf2345c5178ffd049b79b/97ea9b2179b365ad-c4/s100x200/3448a77b72a70db117a08c4ad6fd133363073cd1.png">');

//intialize namespace
setup.messageMacro = {};

// default text option:
setup.messageMacro.default = 'Help';

// <<message>> macro
Macro.add('message', {
    tags    : null,
    handler : function () {
        var message  = this.payload[0].contents;
        var $wrapper = $(document.createElement('span'));
        var $link    = $(document.createElement(this.args.includes('btn') ? 'button' : 'a'));
        var $content = $(document.createElement('span'));

        $link
            .wiki(this.args.length > 0 && this.args[0] !== 'btn' ? this.args[0] : setup.messageMacro.default)
            .ariaClick( this.createShadowWrapper( function () {
                if ($wrapper.hasClass('open')) {
                    $content
                        .css('display', 'none')
                        .empty();
                }
                else {
                    $content
                        .css('display', 'block')
                        .wiki(message);
                }

                $wrapper.toggleClass('open');
            }));

        $wrapper
            .attr('id', 'macro-' + this.name + '-' + this.args.join('').replace(/[^A-Za-z0-9]/g, ''))
            .addClass('message-text')
            .append($link)
            .append($content)
            .appendTo(this.output);
    }
});

UIBar.destroy();
Config.passages.descriptions = true;
$("<div class='imgbox'><div class='macro-crossfade' data-macro-crossfade-id='windowbox'><img class='macro-crossfade-image' src='images/window.png'><img class='macro-crossfade-image' src='images/window.png'></div></div>").prependTo(document.body);
// $("<div id='particles-js'></div>").appendTo(document.body);

:: StoryInit
<<silently>>
  <<cacheaudio "bell" "audio/bell.wav">>
  <<cacheaudio "rain" "audio/rain2.wav">>
  <<cacheaudio "church" "audio/church-ambience.wav">>
  <<cacheaudio "door" "audio/door.wav">>
  <<cacheaudio "clicking" "audio/click.wav">>
  <<cacheaudio "ambience" "audio/ambience.wav">>
<</silently>>

:: PassageHeader
<<silently>>
  /* Navigation noises */
  <<on 'click' 'button'>>
    <<audio clicking volume 0.1 play>>
  <</on>>
  /* Keyboard navigation */
  <<on 'keyup'>><<which 81>><<script>>UI.settings();<</script>><</on>>
  <<on 'keyup'>><<which 13>><<trigger 'click' '.continue button'>><</on>>
  <<on 'keyup'>><<which 32>><<trigger 'click' '.continue button'>><</on>>
  <<on 'keyup'>><<which 39>><<trigger 'click' '.continue button'>><</on>>
  <<on 'keyup'>><<which 37>><<trigger 'click' '.back button'>><</on>>
  /* Forward button navigation */
  <<on 'click' '.continue button'>>
    <<if _ctp.log.index gt 0>>
      <<if $('.back').is(":hidden")>>
        <<run $(".back").css("display", "block")>>
      <</if>>
    <</if>>
  <</on>>
  /* Backwards button navigation */
  <<on 'click' '.back button'>>
    <<if _ctp.log.index is 0>>
      <<if $('.back').is(":visible")>>
        <<run $(".back").css("display", "none")>>
      <</if>>
    <</if>>
  <</on>>
<</silently>>

:: Main Menu [menu yellow] {"position":"100,0"}
<<silently>>
  <<audio church loop volume 0.10 play>>
  /* <<audio ambience loop volume 0.25 play>> */
  <<audio rain loop volume 0.10 play>>
  <<crossfade "windowbox" "images/window.png" 2s>>
<</silently>>
<div class="passage">
<div class="startbox">
  <h1>Camillus</h1>
  <div class="menu-items">
    <<button "Start" "I">><<crossfade "windowbox" "" 0s>><</button>>
    <<button "Warnings" "Warnings">><</button>>
    <<button "Credits" "Credits">><</button>>
  </div>
</div><div class="buttons"><div class="continue"><<disable>><<button "&#8594;">><</button>><</disable>></div><div class="back"><<disable>><<button "&#8592;">><</button>><</disable>></div></div></div>


:: I [yellow] {"position":"100,100"}
<<silently>>
/* Initial variables */
  /* Starting audio */
  <<audio church fadeoverto 1 0>>
  /* <<audio ambience fadeoverto 1 0>> */
  <<audio rain fadeoverto 1 0>>
  <<audio door play>>
  /* Starting variables */
  <<set $section to "section1">> /* Sets the starting pasage */
  <<set $input to false>> /* Allows input in textboxes */
  <<set $choice to false>> /* Allows choice selection in textboxes */
  <<set $continue to false>> /* Allows nav forward */
  <<set $back to false>> /* Allows nav back */
  <<set _new to [22, 24, 26]>> /* Lines where you cannot go back */
  <<crossfade "windowbox" "images/window.png" 1.8s>>
<</silently>>
<div id="textbox">
  <<ctp "section1">>
    /* Set the ctp to the section to access index attribute */
    <<liveblock>><<set _ctp to CTP.getCTP($section)>><</liveblock>>
    /* Checks if textbox input prompt can be disabled */
    <<ctpHead>>
      <<if _ctp.log.index gt 5>>
          <<set $choice to true>><<update>>
      <</if>>
      <<if _new.includes(_ctp.log.index)>>
          <<set $back to true>><<update>>
      <</if>>
    <<ctpNext t8n>>
      <<set $continue to true>><<set $back to true>><<update>>
      <<timed 0.5s>><<ctpAdvance $section>><</timed>><<ctpNext t8n>>
        ----
        <span class="c">//I am in no rush.//</span>
      <<timed 2s>><<ctpAdvance $section>><</timed>><<ctpNext t8n>>
        <span class="c">//Neither is the Lord.//</span>
      <<timed 2s>> <<ctpAdvance $section>><</timed>><<ctpNext t8n>>
        <span class="c">//Begin when you feel it is right.//</span>
      <<timed 2s>> <<ctpAdvance $section>><</timed>>
      <<ctpNext t8n>>
        ----

      <<liveblock>>
        <div data-tags="red"><<disable $choice>><<button "Read the confession script" "Jump Test">><<set $option to 1>><<ctpAdvance $section>><</button>><</disable>>
        <<disable $choice>><<button "Ask for clarification">><<set $option to 2>><<ctpAdvance $section>><</button>><</disable>>
        <<disable $choice>><<button "Be honest">><<set $option to 3>><<ctpAdvance $section>><</button>><</disable>></div>
      <</liveblock>>
      
    <<ctpNext t8n>>
      <<timed 0s>>
        <<type 50ms>>I actually haven't confessed in...<</type>>
        <<next 3s>><<type 50ms>>A while.<</type>><<next 2s>><<ctpAdvance $section>>
      <</timed>>
    <<ctpNext t8n>><<timed 0s>><span class="c">//...A while?//</span>

        <<next 3s>><<type 50ms>>....By a while I mean //never//, actually.<</type>><<next 2s>><<type 50ms>>I don't know why I'm here!<</type>><<next 2s>><<type 50ms>>It's a //pain in the ass// even //getting// to this stupid church.<</type>><<next 2s>><<type 20ms>>
        I just thought, maybe, i don't know, my friends said that new priest seemed kind of hot and he'd be my type, not that I'd know because I //don't go to mass//, and Come on, what kind of priest would be available for a drink anyway. <</type>><<next 3s>><<type 20ms>>So here I am sitting all alone with you trying to see if my friends were right, except I have //no idea// what I'm doing here, or what you're even supposed to //say//.
        <</type>>
        <<next 2s>><<type 60ms>>I just wanted and an excuse to meet you, and I can't even -- <</type>>
        <<next 3s>><<type 60ms>>I --<</type>>
        <<next 3s>><<type 50ms>><div class="shake"> //''I can't even see your face!''// </div><</type>><<next 8s>><<ctpAdvance $section>>
      <</timed>>
    <<ctpNext t8n>>
      <span class="c">//Dios mio, hijo.//</span>[[Jump Test]]

        
      
  <</ctp>>
</div><div class="buttons"><div class="continue"><<liveblock>><<disable $continue>><<button "&#8594;">><<ctpAdvance $section>><</button>><</disable>><</liveblock>></div><div class="back"><<liveblock>><<disable $back>><<button "&#8592;">><<ctpBack $section>><</button>><</disable>><</liveblock>></div></div>

:: Demo {"position":"225,0"}
<<silently>>
/* Initial variables */
  /* Starting audio */
  <<audio church fadeoverto 1 0>>
  <<audio ambience fadeoverto 1 0>>
  <<audio rain fadeoverto 1 0>>
  <<audio door play>>
  /* Starting variables */
  <<set $section to "section1">> /* Sets the starting pasage */
  <<set $img to "images/window.png">> /* Sets the starting image */
  <<set $input to false>> /* Allows input in textboxes */
  <<set $continue to false>> /* Allows nav forward */
  <<set $back to false>> /* Allows nav back */
  <<set _new to [22, 24, 26]>> /* Lines where you cannot go back */
  /* <<live '<img @src=$img>'>> */ /* Alternative way of setting images */
<</silently>>
<div class="imgbox"> <<crossfadecontainer "windowbox" $img>></div>
<div id="textbox">
  <<ctp "section1">>
    /* Set the ctp to the section to access index attribute */
    <<liveblock>><<set _ctp to CTP.getCTP($section)>><</liveblock>>
    <<ctpHead>><<silently>>
      <<if _ctp.log.index gt 9>>
          <<set $input to true>><<update>>
      <</if>>
      <<if _new.includes(_ctp.log.index)>>
          <<set $back to true>><<update>>
      <</if>><</silently>>
    /* Example lines */
    /* <<set $img to "images/window.png">><<update>> */ /* Alternative way to set images */
    <<ctpNext t8n>>
      Line with scroll-up transition.
    <<ctpNext>>
      Line without scroll-up transition.
    <<ctpNext t8n>>
      <<crossfade "windowbox" "images/test.png">>Advancing to this line changes the image.
    <<ctpNext t8n>>
      <<crossfade "windowbox" "images/window.png">>Advancing to this line changes the image again. Going back will not revert the image.
    <<ctpNext t8n clear>>
      Clear (undoable).
    <<ctpNext t8n nobr>>
      Because max-width: 100%, can no longer do same-line additions using CTP.
    <<ctpNext t8n 1s>>
      Delayed response. (Not overriden, but clickable).
    <<ctpNext t8n>>
      <div class="shake">Shaking text.</div>
    <<ctpNext t8n>>/* Creating and disabling textboxes */
      <<liveblock>> <<disable $input>><<textbox "$name" "">><</disable>><</liveblock>>
    <<ctpNext t8n>> /* Handling inputs from textboxes */
      <<if $name.length is 0>>
        Response if no input.
      <<else>>
        <<set $name to $name.toUpperFirst()>>
        Response if there is an input.
        Inputted value in correct format: $name
      <</if>>
    <<ctpNext t8n>>
      <<textarea "$pieEssay" "">>
    <<ctpNext t8n>> /* Dropdowns */
      <<message 'Create a dropdown link'>>This is text in the dropdown.<</message>><<message 'Create a dropdown button' btn>> This is text in the dropdown button.<</message>><<message 'Same Title' btn 'ID_1'>>This is text in the dropdown of a same-title.<</message>><<message 'Same Title' btn 'ID_2'>>This is text in the dropdown of a same-title.<</message>>
    <<ctpNext t8n>> /* Typing effect */
      <<type 40ms keep>> Type characters,  Including [[links]] and ''other markup''<</type>>
      <<set $continue to true>><<set $back to true>><<update>>
      <<timed 3s>><<ctpAdvance $section>><</timed>><<ctpNext t8n>>Text after.
      <<set $continue to false>><<set $back to false>> <<update>>
    <<ctpNext t8n>> /* Clickable text changes */
      <<linkreplace "Text to be replaced when clicked." t8n>>Replacement text.<</linkreplace>>
      
      The beginning of a sentence, <<linkappend "clickable text to trigger." t8n>> Text added after clickable.<</linkappend>> End of the sentence.
      
      The beginning of a sentence, <<linkprepend "clickable text to trigger." t8n>> Text added before clicakble. <</linkprepend>> End of the sentence.
    <<ctpNext t8n>> /* Self-timed no-click sentence adding */
      Incoming timed text.
      <<set $continue to true>><<set $back to true>><<update>>
      <<timed 2s>><<ctpAdvance $section>><</timed>><<ctpNext t8n>>Text after 2s. Has fade-up.
      <<timed 2s>> <<ctpAdvance $section>><</timed>><<ctpNext t8n>>Another line after 2s.
      <<timed 2s>><<ctpAdvance $section>><</timed>><<ctpNext t8n clear>>Cleared screen, then another line after 2s.
      <<set $continue to false>><<set $back to false>> <<update>>
    <<ctpNext t8n>> /* Manual passage navigation still possible */
      [[Main Menu]] [[Jump Test]]

    <<ctpNext t8n>> /* Cycling choices */
      <<set $continue to true>><<set $back to true>><<update>>
      The answer to the //Ultimate Question of Life, the Universe, and Everything// is?
      <<cycle "$answer" autoselect>>
        <<option "Towel">>
        <<option "π" 3.14159>>
        <<option 42>>
        <<option 69>>
        <<option "∞" Infinity>>
      <</cycle>>
      <<button "Submit">><<ctpAdvance $section>><</button>>
    <<ctpNext t8n clear>> <<print _ctp.log.index>>
      <<set $continue to false>><<set $back to false>> <<update>>
      <<= $answer>>

    <<ctpNext t8 clear>> /* Button choices */
      <<set $continue to true>><<set $back to true>><<update>>
      <<set $choice to "default">>

      <<message "Ready to decide. (img load)" btn>>
      <<button "Choice 1">><<set $choice to "choice 1">><<ctpAdvance $section>><</button>>
      <div class="multichoice">
        <<button "Choice 2">><<set $choice to "choice 2">><<ctpAdvance $section>><</button>>
        <<button "Choice 3">><<set $choice to "choice 3">><<ctpAdvance $section>><</button>>
        <<button "Choice the Fourth">><<set $choice to "choice 4">><<ctpAdvance $section>><</button>></div><div class="multichoice transparent">
        <<button [img[images/test.png]]>><<set $choice to "image 1">><<ctpAdvance $section>><</button>>
        <<button [img[images/test.png]]>><<set $choice to "image 2">><<ctpAdvance $section>><</button>>
        <<button [img[images/test.png]]>><<set $choice to "image 3">><<ctpAdvance $section>><</button>></div><div class="multichoice">
        <<button [img[images/test.png]]>><<set $choice to "image 1">><<ctpAdvance $section>><</button>>
        <<button [img[images/test.png]]>><<set $choice to "image 2">><<ctpAdvance $section>><</button>>
        <<button [img[images/test.png]]>><<set $choice to "image 3">><<ctpAdvance $section>><</button>></div><</message>>
    <<ctpNext t8n clear>> <<print _ctp.log.index>>
      <<set $continue to false>><<set $back to false>> <<update>>
      <<= $choice>>

    <<ctpNext t8n clear>> /* Checkbox, radiobutton, listbox, numberbox choices */
      <<set $continue to true>><<set $back to true>><<update>>
      <<set $pie to "no pie">>

      What pies do you enjoy?
        <label><<checkbox "$pieBlueberry" false true>> Blueberry?</label>
        <label><<checkbox "$pieCherry" false true>> Cherry?</label>
        <label><<checkbox "$pieCoconutCream" false true>> Coconut cream?</label>

      What's your favorite pie?
        <<radiobutton "$pie" "blueberry" autocheck>> Blueberry?
        <<radiobutton "$pie" "cherry" autocheck>> Cherry?
        <<radiobutton "$pie" "coconut cream" autocheck>> Coconut cream?

      <<listbox "$lbanswer" autoselect>>
	      <<option "Towel">>
	      <<option "π" 3.14159>>
	      <<option 42>>
	      <<option 69>>
	      <<option "∞" Infinity>>
      <</listbox>>

      Wager? <<numberbox "$wager" 100>>

      <<button "Submit">><<ctpAdvance $section>><</button>>

    <<ctpNext t8n clear>> <<print _ctp.log.index>>
      <<set $continue to false>><<set $back to false>> <<update>>
      <<= $pieBlueberry>>
      <<= $pie>>
      <<= $lbanswer>>
      <<= $wager>>
    
    <<ctpNext t8n>> <span style="font-size:20px; color: gold;">&#9884;</span> /* end section marker */

    <<ctpNext t8n clear>> /* Required empty ending passage to move to next section */

    /* Checks when to change sections */
    <<ctpTail>> 
      <<if _ctp.log.index is _ctp.stack.length - 1>>
        <<run _ctp.goTo(0);>>
        <<set $section to "section2">><<update>>
      <</if>>
  <</ctp>>

  <<ctp "section2">>
    <<set _ctp to CTP.getCTP($section)>><<update>>
    <<ctpNext t8n>>
      <<script>>
        var element = document.getElementById("textbox");
        element.scrollTop = -2000;
      <</script>>
      This is a new section. (not undoable)
  <</ctp>>
</div><div class="buttons"><div class="continue"><<liveblock>><<disable $continue>><<button "&#8594;">><<ctpAdvance $section>><</button>><</disable>><</liveblock>></div><div class="back"><<liveblock>><<disable $back>><<button "&#8592;">><<ctpBack $section>><</button>><</disable>><</liveblock>></div></div>
 
:: Warnings [menu red]
<<silently>>
  <<audio bell volume 0.1 play>>
  <<crossfade "windowbox" "images/windowred.png" 2s>>
<</silently>>
<div id="textbox" style="flex-direction:column;"> 
  <h1 style="font-size:16px;">Content Warnings</h1><ul>
  <li>Death</li><li>Self-harm</li></ul>
</div><div class="buttons"><div class="back"><<button "&#8592;" "Main Menu">><</button>></div></div>

:: Credits [menu pink]
<<silently>>
  <<audio bell volume 0.1 play>>
  <<crossfade "windowbox" "images/windowpink.png" 2s>>
<</silently>>
<div id="textbox" style="flex-direction:column;"> 
  <h1 style="font-size:16px;">Credits</h1><ul>
  <li>Stevie</li><li>Other people</li></ul>
</div><div class="buttons"><div class="continue"><<disable>><<button "&#8594;">><</button>><</disable>></div><div class="back"><<button "&#8592;" "Main Menu">><</button>></div></div>

:: Jump Test [yellow]
<div id="textbox">[[Main Menu]]</div><div class="buttons"><div class="continue"><<liveblock>><<disable $continue>><<button "&#8594;">><<ctpAdvance $section>><</button>><</disable>><</liveblock>></div><div class="back"><<liveblock>><<disable $back>><<button "&#8592;">><<ctpBack $section>><</button>><</disable>><</liveblock>></div></div>

:: PassageFooter 
<<if not tags().includes("menu")>>
<div class="miniUI"><<message "&#9776;" btn>>
    <<link "settings">><<script>>UI.settings();<</script>><</link>>
    <<link "saves">><<script>>UI.saves();<</script>><</link>>
    <<link "restart">><<script>>UI.restart();<</script>><</link>>
  <</message>></div>
<</if>>

/* <<if tags.includes("red")>>
  <<silently>>
    <<script>>
        $("button").css("background-color", "orangered")
        $("button:disabled").css("background-color", "#444")
    <</script>>
  <</silently>>
<</if>> */